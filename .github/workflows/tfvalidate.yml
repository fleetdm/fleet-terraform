name: tfvalidate

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
  pull_request:
    paths:
      - '**.tf'
  workflow_dispatch: # Manual dispatch

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id}}
  cancel-in-progress: true

defaults:
  run:
    # fail-fast using bash -eo pipefail. See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

permissions:
  contents: read

jobs:
  list_addons:
    name: list terraform addon directories
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - id: matrix
        run: echo "value=$((echo ./; find ./ -wholename './addons/*' -maxdepth 2 -mindepth 2 -type d -o -wholename '*example' -type d -mindepth 1 -maxdepth 2) | jq -s -R 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}
  tfvalidate:
    name: terraform validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_dir: ${{ fromJson(needs.list_addons.outputs.matrix) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Clone repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: 1.11.2
      # If we want to test more of these, consider using a matrix.  With a matrix of directories, all terraform modules could be fully tested and potentially in parallel.
      - name: Validate ${{ matrix.terraform_dir }}  module (covers all submodules)
        working-directory: ${{ matrix.terraform_dir }}
        run: |
          terraform init -backend=false
          terraform validate
